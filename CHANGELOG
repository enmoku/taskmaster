# Changelog
Comprehensive changes can be found in Git change history:
	https://github.com/mkahvi/taskmaster/commits/master

## [0.14...]
### 2020-11-16
	Changed: Removed the deprecated Serilog.RollingFile dependency and moved to use Serilog.File for the same purpose.
	Changed: Unique crash logs are now enforced. The option to have non-unique crash logs has been removed.
### 2020-10-06
	Changed: Internet outage notification has longer cooldown. TODO: Make this configurable.
### 2020-08-29
	Fixed: Win7 was reported as only supported platform in app.config when this had not been the case for a while (Win10 is now that).
	Fixed: Problems enabling audio control.
	Fixed: Updated code to correctly operate in 64 bit mode and not in legacy 32 bit mode. (reported by Chairkicker Nick as problems with power manager)
	Internal: Various adjustments that should not affect end-users.
### 2020-07-08
	Changed: Reduce some debug output.
### 2020-07-07
	Fixed: Network status logging was not ignoring duplicate reports properly.
	Changed: Attempt to make things smarter with audio device handling.
### 2020-06-29
	Fixed: DynDNS debug output was confused.
	Removed: Don't complain about watchlist rules with insufficient actions. This was done poorly.
	Removed: Don't complain about bad devices by default. Requires audio debug now. Only number of bad devices are output normally.
### 2020-06-26
	Fixed: Smart path didn't format non-filtered paths correctly due to peculiarity of System.IO.Path.Combine.
	Fixed: DNS update failed if it was not previously reported.
### 2020-06-12
	Fixed: Volume adjustments now properly format path as per watchlist rules in all circumstances.
	Fixed: Error when manual control is used in power manager.
### 2020-06-07
	Added: Save debug settings option to the UI so it saves the current debug state.
### 2020-06-05
	Changed: Several internal changes to IPC, modules, number formatting, and others. These should have no notable end-user impact.
	Fixed: Window re-opening was broken by above change.
### 2020-05-29
	Fixed: Smart path was not working correctly.
### 2020-05-24
	Removed: Ideal affinity experiment. Deemed to have no notable impact.
	Removed: Exclusive mode removed. Game mode on Windows 10 does it already.
	Removed: Window resize&reposition feature. Deemed unnecessary for most users and too likely to break things if made into proper feature.
### 2020-04-29
	Fixed: Audio manager under some conditions fails to hook to default devices.
### 2020-04-28
	Fixed: Path visibility option was ignored. It should now properly be generated, cached, and displayed.
	Changed: Various small improvements to log output.
### 2020-04-26
	Changed: Volume changes now show the matching rule and process name as normal.
	Changed: Volume changer to use cached information before trying to harvest it (again).
### 2020-04-21
	Changed: System protection improved by increasing the number of process names.
	Changed: Protection level 2 now denies all changes, not just affinity&priority.
### 2020-04-18
	Fixed: Processing counter shift. For the final time? Who knows. Suspected multi-threading issue.
### 2020-04-16
	Fixed: NullRef when disasbling process debug when foreground monitor is disabled.
### 2020-04-05
	Fixed: ArgumentOutOfRange bug. Hopefully for good.
	Fixed: Process priority was being attempted to be set even when it was set to be ignored.
	Added: Legacy app detection utilizes uniprocessor flag in executables.
	Fixed: I/O Priority warning was output even when it was not actually relevant due to insufficient checks.
	Fixed: Several components could not be disabled correctly.
	Fixed: Paging option was incorrectly using deprecated setting.
### 2020-04-03
	Added: Display more info about legacy, 32bit, and non-LAA app traits.
	Fixed: Culture variations should no longer cause saving/loading configuration to break (e.g. decimal pointer differences).
	Fixed: Exception during initialization when certain components are disabled.
	Changed: Disable a lot of optional components by default on initial launch.
	Fixed: Crash on exit if power manager is disabled.
	Fixed: Crash if loopback is not the first found network interface.
	Changed: Disabled power management configuration option when the component is disabled.
### 2020-03-07
	Changed: Exclusive mode is now disabled unless you're running Windows 7. This interacts poorly with Windows 10 Game Mode and needs farther investigation.
### 2020-03-01
	Fixed: Parent finding was declaring self as parent. Now correctly reports actual parent process if found.
### 2020-02-26
	Fixed: ArgumentOutOfRange exception in LogListRetrieveItem. Hopefully.
### 2020-02-24
	Changed: Crashes are now more descriptive if the error occurs deeper in the code.
### 2020-01-18
	Fixed: Invocation problems that were introduced due to recent changes.
### 2020-01-??
	Changed: Internal changes that should not be visible to end-user.
### 2020-01-10
	Added: Tabs for the log. Warnings tab that just shows warnings. This will likely be scrapped later and changed into log filtering.
### 2020-01-09
	Changed: Altered some process handling logic to attempt to fix a handling counter leak. Uncertain if the problem is fixed as nothing observed seems to suggest the leak should happen under any conditions.
	Changed: Recheck should not delay normal logic, it is no longer waited on.
	Changed: Used cached process info more often and generally alter how processes are cached.
	Changed: Add missing processing states.
	Fixed: Detecting already running process would create crash log.
### 2020-01-03
	Added: Configuration for maximum component load time (default 120s). No UI configuration yet.
### 2019-12-22
	Fixed: SynchronizationLockException due to using thread locking when it made no sense.
### 2019-12-19
	Fixed: Don't output IOException when failing to gain access to executable for legacy testing.
	Fixed: Odd update issues with the log list.
	Added: Trace log status is shown in the normal log as well if enabled.
### 2019-12-17
	Changed: Stop logging voluntary crashes.
### 2019-12-16
	Changed: Make internal code report power plan/behaviour changes more explicitly.
	Changed: Session start high performance _reset_ should be skipped if anything else has changed the power behaviour.
### 2019-12-08
	Fixed: ArgumentOutOfRangeException for process select dialog when nothing was selected.
### 2019-12-07
	Fixed: NotImplementedException for a feature not being intended to be implemented.
	Fixed: NullReferenceException when attempting to create a new watchlist rule.
### 2019-12-03
	Changed: Don't write crash log on some soft failures.
### 2019-12-02
	Added: Dialog to attempt restart if there's an initialization failure with relevant errors.
	Changed: Some error handling should now produce much more useful messages.
### 2019-11-29
	Fixed: Null reference exception in hang detector.
### 2019-11-23
	Fixed: Processor count is fetched via P/Invoke to avoid a rare COM exception. (reported by Chairkicker Nick)
	Fixed: Null reference error in exit cleanup. (reported by Chairkicker Nick)
	Fixed: Double reporting of an error in exit cleanup. (reported by Chairkicker Nick)
### 2019-11-11
	Fixed: Assertation error in health monitor from poorly handled lock.
### 2019-10-15
	Changed: Log some self-maintenance errors properly.
	Fixed: Boot time high performance mode was doing math wrong and crashing. (reported by Chairkicker Nick)
### 2019-10-13
	Changed: Log initialization failures better.
### 2019-10-12
	Fixed: NullReferenceException in the crash handler (reported by Chairkicker Nick)
	Fixed: ArgumentOutOfRangeException in opening component configuration with unexpected WMI poll delay. (reported by Chairkicker Nick)
### 2019-10-10
	Added: Session start and session end power boosting. Disabled by default. (requested by Chairkicker Nick)
### 2019-10-09
	Fixed: 2 potential errors when closing down.
### 2019-09-25
	Fixed: Process debug overrode some basic output, turning them all into debug messages. Messages that normally would appear are no longer labeled as debug.
### 2019-09-23
	Fixed: Watchlist warning option was causing it to trigger excessively.
### 2019-09-18
	Fixed: Null reference when default audio device is lost.
	Changed: Sorting of loaders. Now ignores ignored items.
	Added: Exclusive mode can be enabled in the UI for watchlist rules.
### 2019-09-12
	Changed: Don't log a useless error regarding process exit.
### 2019-09-11
	Added: Warn option to watchlist rules so they appear as warnings in the log instead. Personal use case is logging things running from temp with parent also logged.
### 2019-08-25
	Fixed: Process debug was not showing as much as it should've in exit wait list.
	Internal: Improvements to loader display.
### 2019-08-23
	Changed: Foreground hang detection. Apparent false positives are being detected for unknown reason, hopefully this fixes that. Effectiviness unconfirmed.
	Changed: Use PInvoke for hang detection instead of native due to significantly better performance.
### 2019-08-21
	Fixed: ArgumentNullException when saving a watchlist rule caused by update done on 2019-08-18.
### 2019-08-19
	Added: Legacy workaround setting is now saved if it's changed. UI configuration still missing.
	Fixed: Affinity limit mode now properly moves cores besides limiting them, avoiding reduction in number of cores when not necessary.
### 2019-08-18
	Changed: Watchlist saving should now happen less and only when actual changes have been made.
### 2019-08-16
	Fixed: Some errors related to processes exiting before we finish with things.
### 2019-08-15
	Fixed: Limit affinity strategy was behaving incorrectly (e.g. 0001 was converted to 1000).
	Fixed: Force affinity strategy was broken with the above fix.
### 2019-08-11
	Fixed: Internet upstate is now properly updated on the UI.
	Internal: A lot of internal changes should improve performance.
	Changed: Version number bump, there's just been too many improvements since 0.13 was new.

## [0.13...]
### 2019-08-08
	Changed: Event log now uses virtual mode which should make it much more responsive and less resource heavy under heavy load.
### 2019-08-06
	Changed: Attempt to reduce CPU usage or at least shift it from blocking other more important things.
### 2019-08-05
	Changed: Process path extraction now uses PInvoke GetModuleFilenameEx instead of MainModule.FileName as benchmarking pointed the PInvoke approach to be almost 10 times faster.
	Changed: Network link speed is no longer reported. Link state for IPv4 and IPv6 are reported separately, tho this may change.
	Changed: How network state reporting works. Hopefully it's more reliable now and less spammy.
	Fixed: Some bad cleanup code was fixed. Mostly affecting attempts to restart the app.
	Internal: Several internal events use now simpler mechanism.
### 2019-08-03
	Fixed: NullReferenceException in …\Power\Manager.cs:1203
	Fixed: I/O priority defaulted to background for new rules instead of ignore.
### 2019-07-29
	Fixed: Power and Process debug were not available properly.
	Added: Exclsuive mode is tracked in process debug.
### 2019-07-27
	Fixed: Foreground hang detector was not updating what program was last hung.
	Added: Experimental loader display UI. Currently unusable. Early experimentation discouraging.
### 2019-07-18
	Internal: Simplified/unified some parts of the code to reduce repeating.
	Removed: Support for all deprecated settings in the .ini files.
	Changed: Processing counter is now only updated on UI update tick and not on every single change.
		Should impact CPU usage of process scan events.
	Fixed: NumericUpDown now resets value if given garbled data instead of ignoring it.
	Added: Health monitor check frequency and memory free threshold now configurable in UI.
### 2019-07-12
	Added: Experimental system loader analysis. No UI yet.
	Fixed: Rare weirdness with watchlist.
### 2019-07-09
	Added: Legacy workaround option to force pre-Win2k apps to run on single core. No GUI config yet.
	Fixed: Flickering in ListViews when resizing
### 2019-07-06
	Added: --nolog command line argument to disable logging to disk.
### 2019-07-01
	Changed: Ensure multiple initialization failures all get logged.
	Fixed: Fix for adjust delay debugging printing errors when it encounters empty CreationDate in __InstanceCreationEvent.TargetInstance.
	Fixed: Weird ReflectionTypeLoadException error
### 2019-06-30
	Changed: Rule name is now included in process start&exit logging.
### 2019-06-29
	Changed: Crash log now includes filename of fault location.
	Changed: Safer native calls.
	Changed: App version is no longer stated in main window title bar.
### 2019-06-28
	Fixed: DynDNS update was not properly closed, potentially leaking an open connection (until it times out).
	Changed: DynDNS setup no longer is limited to single service. Only one type of updates are supported still, however.
	Changed: Disabled some unneeded features of .NET/C#, hopefully resulting in slightly faster start-up time.
	Fixed: Initialization failure bleeds through and the app is launched "successfully".
### 2019-06-26
	Changed: IP address handling.
	Fixed: Link-local network addresses were reported as public ones.
	Fixed: Some deadlocks, mostly related to exclusive mode.
### 2019-06-25
	Fixed: Health Monitor was using free memory bytes as megabytes.
	Added: Basic DynDNS support test.
	Fixed: Some Audio debug was showing when it shouldn't and vice versa.
	Internal: Some behind the scenes tweaking.
### 2019-06-15
	Fixed: Error in process select dialog while scanning for existing processes.
### 2019-06-12
	Fixed: Advanced config could not be opened from tray context menu if main window was closed.
	Changed: Initialization should now be more reliable.
### 2019-06-10
	Added: Native Image generation experiment.
### 2019-06-05
	Changed: Exclusive mode was being a little eager.
	Changed: Ignore list is checked earlier for matches.
### 2019-06-03
	Added: Event log now has 3 icons to correspond to various messages to make it easier to notice warnings and errors.
	Updated: Third party licenses.
### 2019-06-02
	Internal: Logic changes, should have no end user effect.
### 2019-06-01
	Changed: Protected executables are now done so only if they're in %SystemRoot% or if the path is inaccessible.
### 2019-05-31
	Changed: Protected executables now also protect affinity by default.
### 2019-05-30
	Internal: Various tweakings to process triage, should be tiny bit faster. Something may have broken.
	Changed: No longer block logoff and accept dirty shutdown.
### 2019-05-27
	Changed: I/O priority disabled in expriment config for non-Win7.
### 2019-05-25
	Fixed: NIC traffic and error deltas and total errors were not being updated.
### 2019-05-23
	Added: Option to disable visual styling.
### 2019-05-22
	Fixed: Various issues related to audio service dying or audio devices being lost causing a crash or mass of errors.
### 2019-05-21
	Fixed: Bad I/O priority default.
### 2019-05-20
	Added: Preference order column added to watchlist.
### 2019-05-19
	Fixed: Executable matching was not working correctly since multi-exe support was added.
### 2019-05-14
	Fixed: Changelog typo on date 2019-05-01. Now instead of not. (reported by Chairkicker Nick)
	Fixed: Various volume meter options were not being put to use from advanced options at runtime and old option was shown in some instances.
	Internal: Small inconsequential changes.
### 2019-05-13
	Fix: Error when shutting down if WMI service is acting up.
### 2019-05-08
	Fix: Weird NullRefrenceException.
	Added: Splash-load window.
### 2019-05-07
	Changed: Loading is slightly altered to accommodate following changes.
	Changed: Main window display is changed. It no longer should be topmost at launch. Only when user manually has requested the window.
### 2019-05-06
	Fix: Audio hooking could sometimes silently fail for a time.
	Fix: Exiting too quickly causes an exception as tasks are cancelled.
### 2019-05-04
	Fixed: ArgumentNullException when trying to open a rule with no executables defined.
### 2019-05-02
	Fixed: Warnings about misconfigured INI files now report correct line number instead of -1.
### 2019-05-01
	Changed: Rules with no priority, affinity, or power plan are now considered valid. Responsibility is on the user.
	Changed: Updated from .NET 4.7.2 to 4.8
	Added: Support for multiple executables per watchlist rule.
	Disabled: Filename validation as it does not play well with the multiple executables implementation.
### 2019-04-30
	Added: Parent finding. Enabled per-rule and in general in advanced options.
### 2019-04-28
	Added: Advanced configuration now temporarily hosts ignore and protected lists.
		No configuration is allowed in the UI for these as they're purely informative. These will be moved elsewhere in later update.
### 2019-04-27
	Added: Power menu in main window so power changes are available outside of the tray context menu.
### 2019-04-25
	Added: IPC component warns about insufficient permissions.
	Fixed: Using statement was hiding an exception because NamedPipe dispose was throwing a new one under some circumstances.
	Added: Third party license dialog.
	Changed: Several messageboxes are now centered on parent instead of screen.
### 2019-04-24
	Fixed: Watchlist changes outside of creating new rules was not being saved properly.
### 2019-04-23
	Internal: Small improvements.
### 2019-04-20
	Internal: Improve exit cleanup.
	Internal: Various async code changes.
	Changed: "Show only final state" is now "Final state only" in [Logging].
	Changed: "Show unmodified portions" is now "Unmodified portions" in [Logging].
### 2019-04-19
	Internal: Lots of quality of life changes to internal code, especially to configuration changes.
### 2019-04-17
	Changed: A lot of start-up output was removed or bundled up into fewer lines.
### 2019-04-16
	Added: Process start & exit logging. Configured per rule and disabled by default. (requested by Chairkicker Nick)
	Internal: More re-organizing. Should have no impact on users.
	Internal: UI building. Should have no impact on users.
	Internal: Better scoping of variables so they don't linger forever.
	Changed: Filename and pathname validation is relaxed. It will now allow some invalid input but at least it shouldn't get stuck on user just clicking about.
### 2019-04-11
	Added: Network packet counter. Testing where and what would be best.
### 2019-04-07
	Added: Better logging of session end auto-exit.
### 2019-04-06
	Fixed: Null reference error in relation to watchlist. The internal cache was not treated correctly.
### 2019-03-30
	Changed: Paging is no longer misleadingly enabled in [Component] section and is instead in [Options].
	Fixed: Small typos.
	Fixed: IPv4 changes were not reacted to properly due to a typo.
	Internal: Variety of minor non-specific improvements.
### 2019-03-27
	Internal: Some major internal overhauling.
### 2019-03-25
	Fixed: IPC does not work.
	Added: Secondary TM process dialog cancellation now calls for refresh instead of nothing.
### 2019-03-19
	Fixed: System32 ignore warning was flipped.
	Changed: Default path visibility changed from invalid to process.
	Fixed: Array handling that was breaking new installations.
	Fixed: Main window lists GPU even if related component is disabled.
	Fixed: Empty arrays break things.
### 2019-03-18
	Internal: Restructuring. Should not affecting end-users.
### 2019-03-16
	Internal: Some small changes. Minor end-user effects that should not be very noticeable.
### 2019-03-15
	Changed: Maximum powerdown delay changed from 1 minute to 5 minutes.
	Changed: NVM warnings should be now more sane and uniform in presentation
	Changed: Watchlist item rename now actually renames it instead of recreating it. This removes a hack used for SharpConfig.
### 2019-03-14
	Internal: Various small config access improvements to minimize errors.
### 2019-03-13
	Replaced: SharpConfig with custom .ini handler.
### 2019-03-10
	Removed: --bootdelay argument. If delay is desired, task scheduler can be used for it.
	Fixed: Some message dialogs were positioned oddly at top-left corner of the screen.
	Changed: Some heavy initialization is deferred until later to allow normal initialization to finish sooner.
### 2019-03-09
	Changed: Free memory action is now more informative on what it does and what will happen.
	Fixed: User idletime calculation now works correctly, especially at the Windows API stated failpoint of 49 days.
	Added: Health monitor warns about the 49 day wraparound occurring.
### 2019-03-08
	Changed: Watchlist edit now tries to autofill executable name when available.
	Fixed: Watchlist executable validation now complains if the file has no extension.
	Added: Health monitor pressure warning now also informs of the pressure having been successfully alleviated.
	Added: Refresh option to process select dialog.
	Changed: Process select dialog now shows initial state more quickly instead of delaying until refresh is finished.
	Fixed: Power debug was broken if not enabled before launch.
### 2019-03-01
	Fixed: ObjectDisposedException on exit.
	Fixed: ArgumentOutOfRangeException on new rule creation
	Fixed: I/O priority was being affected with I/O priority disabled, if foreground monitor was also enabled.
		This used invalid value however, which should've caused it to be ignored regardless, however.
	Fixed: Path and File name validator in watchlist rule editor behaving badly if the field was empty.
	Added: Volume meter can now be toggled from topmost.
	Added: Watchlist columns can now be re-ordered.
### 2019-02-28
	Changed: Scan now uses single threaded loop instead of parallel loop. Parallel loop was causing strange responsiviness issues.
### 2019-02-27
	Changed: Color configuration. Should now have increased compatibility with different color schemes.
	Added: Option to enable&disable alternate row colors for more things.
	Changed: I/O priority is restored to normal for processes that are granted agency.
	Changed: Smart path ignores folder parts of certain length if they contain the executable name to avoid repeating parts.
	Internal: Cleanup code is now hopefully better.
	Changed: Exclusive mode now also stops search indexer.
### 2019-02-26
	Internal: UI code changes. Should consume less CPU now when the UI is open.
	Changed: Network error output to be more curt when the errors were only in the last sample.
	Added: Show unmodified portions to Logging configuration.
	Changed: By default unmodified portions are no longer shown.
	Changed: I/O priority should no longer be output when it's unchanged.
	Changed: Ignore recently modified config moved from experimental to advanced since it was not an experiment anymore.
	Added: Show only final state to process adjust logging.
	Changed: Some process adjust logging settings are now more logically organized in the UI.
	Fixed: Watchlist alternating row color was sometimes very strange.
	Added: Option to disable the alternating row colors.
	Internal: Small changes.
### 2019-02-24
	Internal: Some logging changes. Should not have impact to end users.
### 2019-02-23
	Changed: Process manager now has a lot of early cancellation features to aid in faster exit.
	Internal: Added more checks for exit to avoid odd errors during it.
	Changed: Watchlist repair function is now more verbose, giving some warning about adjustments to a rule.
	Fixed: Watchlist repair was triggering on things it shouldn't.
	Fixed: Copy to clipboard for watchlist was including deprecated content.
### 2019-02-21
	Fixed: Volume meter config was not working properly in the advanced config.
### 2019-02-20
	Changed: Audio device debug is now actually under audio debug.
	Fixed: Spurious reporting of internet availability.
	Fixed: Rule edit window allowed including invalid characters in friendly name, executable and path fields, these are now caught.
	Changed: Added more error catching code where it was missing.
### 2019-02-18
	Changed: Disabled unnecessary debug output so it'll show only when relevant debug option is enabled.
### 2019-02-17
	Fixed: Some problems with the new audio management.
	Added: Volume meter, for both output and input.
	Added: Volume meter configuration.
	Added: Various configuration options to tray context menu.
	Fixed: InvalidOperationException with exclusive mode
### 2019-02-16
	Changed: Audio and Microphone management. Microphone manager now depends on Audio Manager to function.
	Fixed: Minor leaked bug.
### 2019-02-15
	Fixed: Microphone tab was empty if the associated component was loaded.
	Fixed: Potential massive bug if TM is used outside of Windows 7 with the experimental I/O priority enabled.
	Fixed: Microphone component fails to load if default device is not available at launch.
	Added: Microphone component detects changes to default comms device.
	Changed: Microphone component by default does NOT try to make changes.
	Added: Microphone control can be enabled and disabled in general or per microphone. Only default comm device is managed still, tho.
### 2019-02-14
	Changed: Session end behaivour extended. TM should now properly block session end briefly, with a message, to do clean shutdown.
### 2019-02-13
	Fixed: ArgumentOutOfRangeException caused by saving foreground hysterisis.
	Changed: Improved network error reporting.
	Internal: Some timer changes, should have no impact to end-users.
	Fixed: Rare assertion failure in Audio component if Process Manager has not yet been loaded and hooked into it.
### 2019-02-12
	Added: Advanced config dialog. Mostly for slowly adding missing confguration options in.
### 2019-02-11
	Fixed: Per rule log adjusts was not saved if disabled.
	Fixed: NullReferenceException & ArgumentException in relation to WinEventProc
	Fixed: Watchlist rule adjust count was not updated.
	Fixed: Path matching was broken in recent update.
	Changed: Initial component configuration detection method was not enabling the controls properly.
	Changed: Power and NVM monitors are disabled by default in initial config.
	Removed: Path manager option from component configuration, it has not been used for a while.
		Achieve same result by never defining paths.
	Changed: CPU hid from main UI if relevant component is disabled.
	Added: Hardware monitor in experiment config.
	Changed: Experiment dialog improved and it now asks for restart if saved.
	Fixed: Added several missing items from watchlist rule copy to clipboard function.
	Fixed: Watchlist sorting is better and does so correctly with priority and power columns.
	Changed: Default watchlist updated and made to have all rules disabled by default. It's an example, not recommended.
### 2019-02-10
	Changed: I/O priority requires `IO Priority=true` in [Experimental] in Core.ini.
	Added: I/O priority is now in experiment config dialog and in watchlist rule editor.
	Fixed: Watchlist search now clears itself on timer as intended.
	Added: Ctrl-Backspace now tries to clear text to last whitespace character instead of printing weird character.
	Changed: Unrecognized control characters are now ignored instead of being added to the search as garbage symbols.
	Changed: Self-affinity no longer accepts negative numbers.
	Fixed: Self-priority was not applied at start-up.
	Added: Rule ordering. Watchlist now has `Preference´ setting which defaults to 10. Lower order rules are processed first.
		Rules are sorted internally from time to time using small number of criteria.
		Rules with same order fall back to the other criteria to determine final order (e.g. rules with high adjust count will be sorted earlier).
	Changed: New instances are added to scan block list for 5 seconds to avoid some odd things happenings.
	Fixed: I/O priority was saved incorrectly in UI if set to ignore.
	Changed: Rule controller is refreshed if it's modified during runtime.
	Changed: If foreground monitor is active, it will ensure foreground apps have normal I/O priority.
### 2019-02-09
	Internal: Hiding some things to not be usable where they shouldn't.
	Added: I/O priority control. Watchlist.ini now has `IO priority` setting. This may be inherited, so care needs to be taken when applying it to launchers.
		Valid values are 0 = background, 1 = low, 2 = normal.
### 2019-02-07
	Fixed: Affinity ideal nor Log adjusts settings were not saved across restarts when set in UI.
### 2019-02-05
	Changed: Exclusive mode error handling.
	Changed: Power mode reporting clarified.
	Removed: Path and scanning debug options removed from UI.
### 2019-02-04 Version 0.13
	Added: Watchlist rule editing automatically fills in path when running process is selected, if no path is defined yet.
	Added: Process select dialog now can contain messages.
	Internal: Lots of changes. And version bump.
	Fixed: Year 2019 in changelog. Cut&paste bad, correct dating good. (reported by Chairkicker Nick)
	Fixed: Process&Foreground debug.

## [0.12...]
### 2019-02-03
	Changed: Power mode stuff, especially in relation to session unlock.
	Internal: Reducing monolithic nature of UI building. Should have no effect to end users.
### 2019-02-02
	Internal: Simplified things related process exit detection. Something may have broken.
	Removed: Batch processing support.
	Removed: WMI Queries option from Core.ini, it was not used.
	Removed: Lots of unused internal things.
	Changed: Unified more functionality. Re-using already known facts about running processes. Bugs are expected.
	Added: Retrieve old info when encountering same process again if available.
	Added: Ideal affinity and adjust logging added to watchlist rule editing.
	Changed: All messageboxes changed to use custom one to allow more context relevant positioning. Some things may be broken.
### 2019-02-01
	Internal: Simplified some things. Should have no visible effects to users.
### 2019-01-31
	Internal: Changes and added Adjust Delay debug option in Core.ini.
	Changed: Default affinity for TM itself to 0 (OS control) instead of just the last core.
		The previous setting was fine, but can result in TM appear to be functioning poorly.
	Changed: Persistent watchlist, microphone and WMI stats removed.
		Watchlist.Statistics.ini, Microphone.Statistics.ini, nor Core.Statistics.ini are automatically removed.
	Changed: Detecting unclean shutdown now relies on temporary hidden folder that is created and deleted instead of Core.Statistics.ini.
### 2019-01-30
	Fixed: Exclusive mode is being weird.
### 2019-01-29
	Changed: Foreground only and background powerdown are now the same combobox in the rule editor.
	Internal: Foreground only and background powerdown are now single Foreground mode setting, reflected in the Watchlist.ini as integer with values from -1 to 2.
		-1 = Ignore [Default], 0 = Standard, 1 = Full, 2 = Power only
	Changed: Watchlist validator now warns about core ignore, protected and system32 denial options affecting the rule.
	Fixed: The logs claimed failures on some modifications that were never even tried.
	Changed: Various power manager numbers are now more lenient in allowed ranges.
	Changed: Crash logs are now more descriptive in case the problem goes deeper.
	Added: Experimental Exclusive mode to Watchlist rules. For now all it does is pause WUA. This requires TM be launched with admin rights.
### 2019-01-28
	Fixed: Background mode was not applying even foreground affinity if no background affinity was defined.
	Added: Network input, output, and queue to the UI. Not terribly useful, but it's there.
	Fixed: Net sample timer was not started since the timer update.
	Changed: Network device list reduced in height.
	Fixed: ArgumentOutOfRangeException for string.Substring() in …\ProcessManager.cs:line 1465
### 2019-01-27
	Removed: Adjust latency. It served no purpose than noise.
	Changed: Status bar no longer shows as much useless information.
	Changed: Swapped from Threading.Timer to Timers.Timer because Threading.Timer is prone to obscure delays outside of my control or influence.
	Changed: Reduced use of Task.Run as it seems to load threadpool as well.
	Changed: Watchlist editor has better validation. Ignore list is treated better for malconfiguration.
	Changed: Corrected stated memory unit in UI.
	Fixed: GPU temperature was misplaced.
### 2019-01-26
	Added: Experimental affinity ideal option. Usage via `Affinity ideal=#` in Watchlist.ini with value as zero-indexed number for ideal core.
		Assigned core must be one of the cores allowed by affinity mask.
	Fixed: Auto-adjust was broken in odd ways.
	Changed: Default thread queue barriers increase from 2 and 5 to 5 and 18. Still experimenting on good defaults.
### 2019-01-25
	Added: Thread queue barriers to power auto-adjust.
	Added: Warning about power mode being changed externally when auto-adjust is enabled.
	Fixed: Recently modified being weird.
	Internal: Path visibility changes to shown path is cached in some instances, in case it is used in multiple parts.
	FIXED: A MAJOR BUG IN POWER AUTO-ADJUST. This potentially caused crippling of the computer due to power saver mode getting stuck. Was fun.
	Changed: Ignore recently modified moved to normal features from experiments due to high success.
	Changed: Startup time should be slightly better with changes to how components are loaded.
	Fixed: Weirdness with full CPU mask.
	Fixed: TimeSpan.Zero related issues (some options that are disabled with time set to zero were not being disabled).
### 2019-01-24
	Changed: Recently modified ignoring improved. Programs that try to know what is best for them are let to do so.
### 2019-01-23
	Added: Health monitor now enables NVM stats in the UI.
	Internal: Lots of small internal changes.
### 2019-01-22
	Fixed: Errors were not colored on initial load.
	Changed: Analyzer is more user configurable.
	Fixed: Process tracking is improved.
	Added: Simple configuration window for some experimental features.
	Fixed: Some odd number outputs.
### 2019-01-20
	Internal: Large number of changes that should not affect functionality.
### 2018-01-19
	Fixed: Weird affinity saving.
### 2019-01-18
	Changed: Default path visibility flipped to Process if Executable is defined and Partial otherwise
		Previously it was show Process if Path was not defined and Partial otherwise.
	Fixed: UI allowed creation of invalid watchlist rules (no priority, affinity, nor power).
	Changed: WMI will no longer be used for path fetching, it simply does not give results if other methods fail.
	Fixed: Weird path visibility behaviour in terms of saving it (with Process set as the choice).
### 2019-01-17
	Changed: Process analysis improved
	Fixed: Weird time formatting in power configuration window.
### 2019-01-16
	Fixed: An error with process already exited, yet again.
	Changed: Process analysis is now much more comprehensive. Added `Record analysis´ experimental option.
	Fixed: Process state was not being tracked properly.
	Fixed: Weird output for scan frequency.
### 2019-01-15
	Changed: Process path acquisition improved.
	Fixed: An error with process already exited.
	Added: Beginnings of proper process analysis. Important for automatic process identification.
### 2019-01-14 PARTIALLY INCOMPATIBLE CONFIG
	Added: Watchlist now has basic search function. Just start typing and it'll highlight anything that has matching names.
	Changed: Path visibility File and Folder options removed.
		The IDs used now match Invalid and Partial respectively. No automatic conversion in place.
		Old partial matching will reset to default: automatic selection of process or partial.
	Changed: Smart path visibility should be "smarter".
### 2019-01-13
	Added: Option to show adjust latency per item. This is not saved between restarts.
	Added: Handler for unhandled exceptions. Should write to crash log.
	Internal: Process tracking changed. Bugs may have been introduced.
	Internal: A lot of error catching added. Some non-errors might be caught now.
### 2019-01-12
	Changed: Stacktraces should no longer include project directory as it was not useful.
		Note: It would be preferable if the generated .pbd didn't have it instead.
	Added: Modify latency display to the UI.
	Internal: Lots of code changes to how process handling happens. Something may have broke.
	Added: Better cleanup after process exit.
	Fixed: Rule-based power mode changes were not being applied properly.
	Changed: Exit is not less redundant. Maybe slightly faster as such, too?
	Added: `Unique crash logs´ option in [Logging] in Core.ini.
	Added: Programmatically disable WER dialogs for TM.
		Microsoft does not communicate with me about what WER sends to them, so whyyyy would I want that?
### 2019-01-11
	Added: Monitor power off time and percentage is now shown at end of session unlock.
### 2019-01-10
	Added: Path visibility can now be changed in UI now.
### 2019-01-09
	Internal: Various readability improvements.
	Added: Experimental feature to restart explorer.exe when it crashes. Disabled by default.
		`Explorer Restart=seconds´ in Core.ini [Experimental] section.
	Fixed: Component configuration was not showing current values correctly.
	Changed: UI has received several changes. Things may be broken now.
	Added: Path Visibility option now has -1 (Process) and 4 (Partial) options.
### 2019-01-08
	Added: Memory pressure display on info tab. 100% or over is bad, mkay?
	Internal: Changed how memory is queried. Should be better now.
	Added: Warning about high memory pressure as it coincides with poor performance.
	Internal: A lot of code re-organization. Path matching may be slightly broken as result.
	Changed: Monitor sleep on session lock behaviour altered. Should be slightly more reliable now?
### 2019-01-07
	Fixed: User idle calculation. Ticks are a lie.
	Fixed: A bug in watchlist rule sanity checking. (reported by Chairkicker Nick)
	Fixed: UI state saving. It was not respecting disabled components. (reported by Chairkicker Nick)
	Fixed: Powerdown does not occur if foreground only rule is not used. (reported by Chairkicker Nick)
### 2019-01-06
	Added: Power mode is briefly set to balanced if user is active during session lock to improve session unlock responsiviness.
	Added: Power debug now shows current reaction on top of reactionary plan.
		So it doesn't look like the reaction was actually to change it when it actually intends to keep current.
	Fixed: User idle calculation, should now work "properly" if system is without rebooting for 29.7 days.
### 2019-01-05
	Internal: Massive internal changes that should improve responsiviness but also potentially cause new bugs.
	Fixed: Watchlist ignore list was not actually ignoring things properly.
	Fixed: Some unreliability with foreground only rules.
### 2019-01-04
	Fixed: Volume settings in watchlist rules were not saved.
	Fixed: Some numeric scrolling controls reset when entering values manually, ignoring the user input.
	Improved: Watchlist rule validation.
	Added: Global hotkey ctrl-alt-shift-r now invokes rescan.
	Added: Global hotkeys can now be enabled in component configuration window.
### 2019-01-03
	Fixed: The dialog shown when you have already instance of TM running now actually CAN restart or kill the original instance.
	Changed: Exit procedure is different again. This may result in new crashes on exit.
	Added: Portable mode. Enable by adding Config folder in the same directory as the executable.
### 2019-01-02
	Changed: Changing power behaviour attempts to restore power before continuing, such as the one set at launch.
		This makes disabling manual mode behave better, but in some cases this can cause
		power mode flickering briefly as the new behaviour takes over.
	Changed: Scan requests now invoke it via interaction with the timer instead of calling the scan directly.
		Hopefully making double calls to scan not happen.
	Internal: Various improvements to scanning.
### 2018-12-31
	Internal: Lots of changes. Config version upgraded.
### 2018-12-29
	Added: Option to disable logging of watchlist rules per rule. Only configurable in the Watchlist.ini for now.
### 2018-12-27
	Changed: Improved network availability reporting. It is much more responsive to changes and no longer gets stuck in disconnected state at times.
### 2018-12-24
	Removed: Per watchlist rule Rescan option. It was only used if global scanning was disabled.
		Since the mechanism is the same as global scan, it is recommended to just use potentially faster global scan instead.
### 2018-12-23
	Fixed: Clicking on tray icon now properly restores the window to visibility. Even when minimized.
	Added: The main window or the tray gaining user interaction temporarily lifts TM to higher priority to make it more responsive
		during user interactions. It pushes itself back to anonymity when this interaction ends.
### 2018-12-13
	Fixed: Volume management for watchlist rules was disabling UI elements incorrectly.
	Fixed: Path Visibility options 1 and 2 were swapped.
	Added: Basic implementation of smart path visibility.
	Removed: RegRun option of starting. This is not cleaned up. If you used it, please remove it manually.
	Changed: Session end detection and exit.
### 2018-12-12
	Added: High DPI-awareness. Untested, may simply be broken. On default 96 DPI this has no observable effect as expected.
	External: Serilog updated from v2.6.0 to v2.7.1
	External: NAudio updated from v1.8.4 to v1.8.5
	Fixed: Power mode changes from foreground only & background powerdown were far too spammy.
### 2018-12-11
	Fixed: Foreground hang detector can have some undesirable behaviour.
	Fixed: Loglist was sizing wrong. Hopefully fixed.
	Added: Option to reset power config added.
### 2018-12-10 Version 0.12
	Added: Watchlist rules now have description property for user comments.
	Changed: Visual styles are enabled. This was required to allow keyboard shortcuts in text fields like ctrl-a.
	Fixed: Reduced ListView flickering.

## [0.11...]
### 2018-12-09
	Fixed: Accidentally disabled tray context menu. (reported by Chairkicker Nick)
	Added: Logging for unhandled WinForms exceptions.
	Removed: The run once (--once) option. Unnecessary complication and not in spirit of what TM is for.
	Added: Ability to enable some experimental features via Core.ini [Experimental] section.
		Window Resize=true/false, Last Modified=true/false, and Temp Monitor=true/false
	Changed: Window Resize now no longer constantly rewrites the .ini
	Internal: Unified process modify output.
### 2018-12-07
	Added: Last modified list to the info tab, with option to copy path of the app to clipboard.
### 2018-12-06
	Added: UI option to toggle exit confirmation.
	Fixed: Exit confirmation setting now respected.
	Changed: Info tab re-enabled. Still work in progress.
	Internal: CPU monitoring moved out of power management to its own component.
### 2018-12-05
	Fix: Ensure restore mode & method are set.
	Fix: Ensure process exit is detected properly and that they're cleaned up.
### 2018-12-04
	Changed: Internet checking changed to be faster and smarter. Testing still required to verify.
	Internal: Better cleanup of event handlers
	Internal: Code cleanup
### 2018-12-03
	Changed: Process debug is now more detailed with more info on process debug tab.
	Fixed: Processing counter occasionally forgot to decrement.
### 2018-12-02
	Changed: CPU sampler pausing is more thorough.
	Changed: Debug is less spammy.
	Added: Power configuration has little bit more tooltip details.
### 2018-11-29
	Fixed: Watchlist copy to clipboard option was not including some options.
### 2018-11-28
	Changed: Powerdown delay is untouched in the .ini to allow swapping back and forth between settings.
		It is now simply ignored when it is problematic.
	Fixed: Component configuration was severely outdated. (reported by Chairkicker Nick)
	Removed: Immediate configuration saving. It was causing bugs for no real benefits. (reported by Chairkicker Nick)
	Fixed: Some oddities in power config saving.
	Fixed: Powerdown delay logic was flipped. (reported by Chairkicker Nick)
### 2018-11-27
	Fixed: Show Inaction was showing debug info for things that were not explicitly enabled.
	Added: Monitor power and power mode during session lock options added to power config.
	Fixed: Incorrect reading of some command-line arguments, notably --bootdelay which ignored the supplied number.
	Fixed: --bootdelay was not actually used, now it is. Max delay is 5 minutes.
	Added: Proper launch behaviour support. (requested by Chairkicker Nick)
		Auto-adjust option in Core.ini deprecated in favor of better Behaviour option.
### 2018-11-25
	Added: Show CPU sample frequency in power configuration. This is to help understand the delays involved.
	Fixed: Show Inaction was showing some debug information even when Process debug was not enabled as well.
	Fixed: Power config window was messing with high and low power mode backoff levels. Constrained to 1 to 20 instead of 5 to 95.
### 2018-11-20
	Added: Behaviour and Restore Mode configuration to power configuration UI
	Changed: 'Power auto-adjust configuration' is now just 'Power configuration'
	Fixed: 'Free memory for' option did not actually work properly if you selected anything besides the empty option.
### 2018-11-17
	Internal: A lot of changes that had been left for later. At most fixed some obscure bugs.
	Fixed: Path visibility option was not actually read from Watchlist.ini
### 2018-11-16
	Fixed: Wrong power mode selected in watchlist edit window.
	Changed: Power mode changes don't show for watchlist modifications to avoid spammyness from background powerdown setting.
	Added: Background affinity and priority control to watchlist edit window. Formerly only available via direct .ini editing.
	Added: Audio control to watchlist edit window. Formerly ony available via direct .ini editing.
	Changed: Watchlist edit window is now a little more logically sorted.
	FIXED: Components are now saved! This was broken not too long ago. (reported by Chairkicker Nick)
		Some other configuration savings were also enforced just in case.
	Changed: Watchlist edit window now has some features disabled if associated component is disabled.
### 2018-11-15
	Internal: Removed as much as possible of Serilog's formatted string usage. This should fix large number of output related bugs.
### 2018-11-13
	Added: 'Background affinity' added to complement 'Background priority' for foreground only option.
	Changed: Background priority application and restoration, it is now smarter about it.
	Internal: Massive refactoring, things may have broken.
### 2018-11-12
	Added: 'Path visibility' option to Watchlist. Currently only configurable directly through the .ini.
		Valid values are: 0=File (default), 1=File+Folder, 3=Full Path
		2 will be for "smart" visibility which is not yet implemented
	Added: Show inaction option now shows inaction relating to 'Ignore System32' option in Core.ini
	Changed: "# not paused; not resuming" message pushed to foreground debug.
	Changed: Better foreground debugging in general.
	Fixed: Bad logging for hung foreground apps.
	Internal: Power auto-adjust config presentation changed to make it easier to manage, possibly to allow more presets in the future.
	Internal: Process affinity and priority alterations are simplified. This should make them much more manageable for getting things right.
### 2018-11-11
	Fixed: Power auto-adjust settings were saved incorrectly.
	Changed: Power mode name strings are now more forgiving and varied.
	Changed: Info tab disabled until better use can be figured out for it.
### 2018-11-10
	Fixed: Power auto-adjust tuning was not saved if modified in the UI.
### 2018-11-09
	Fixed: Background powerdown setting was not saved from UI.
	Fixed: Watchlist power mode is now properly handled with auto, manual and rule-based power modes.
	Fixed: Powermode interaction with foreground only and background powerdown settings.
	Added: Audio Volume Strategy 4 and 5. 4 is Decrease from Full, 5 is Increase from Mute. Volume is untouched otherwise.
	Changed: Internet failure should be less spammy.
	Changed: Average uptime calculation.
	Changed: Crashing before logging system is online will cause custom crash.log to be written in logs folder instead of using EventLog.
	Internal: String handling changed.
### 2018-11-07
	Fixed: Exception handling in startup.
	Added: Multicore JIT profiling. This may speed up TM, especially for startup. First startup is unaffected.
### 2018-11-05
	Changed: Internal sanity checking reduced. We trust code that has not caused problems more.
	Changed: Trace output is no longer provided on non-debug builds.
	Changed: Console output disabled for non-debug versions.
	Internal: Removed several unused internal references (WindowsBase, System.Xaml, PresentationCore, PresentationFramework).
### 2018-10-31
	Fixed: Crash on last day of a month. (via a related report by Chairkicker Nick)
	Fixed: Setting affinity strategy to ignored from force or limit in UI is now respected.
	Fixed: Watchlist formatting is now uniform whether you just started TM or modified a rule.
### 2018-10-22
	Fixed: Foreground only option did not prevent the app from being changed back by normal rescans, ignoring the foreground only option.
### 2018-10-13
	Added: Network interfaces now have copy full information option in context menu, which includes IPv4&IPv6 address and some traffic data.
### 2018-10-12
	Fixed: Altered foreground monitoring to no longer leak tiny amount of memory whenever an app that has foreground rules enabled
		closes down while in the foreground (most cases of normally exiting said apps).
	Changed: Memory log (used for displaying logs in the UI) is no longer static. This should not have any visible changes to users.
	Removed: Properties.Settings, it just didn't provide anything useful.
	Changed: How settings are saved.
		This may be buggy, such as not all settings being saved, this is mostly caused by uncertainty on how SharpConfig works.
### 2018-10-11
	Added: Option to mute network error logging (Configuration > Logging > Show network errors).
		This can get really spammy on certain networks without this option.
	Changed: Network errors are now immediately shown and they will stop showing after 5 consecutive reports.
### 2018-10-10
	Fixed: Errors that output stacktraces cause only 1 fatal error instead of 3.
	Added: Self-maintenance to run garbage collector once a day at midnight.
### 2018-09-19
	Fixed: Some internal locking. Should behave better in corner cases.
	Fixed: Exit behaviour. Should be more consistent.
	Fixed: Admin elevation from command-line arguments should be more reliable and not cause TM to just vanish on occasion.
### 2018-09-08
	Fixed: Potential permanent resource leakage related to static event handlers.
	Changed: IP changes are now in Info logging level instead of Debug.
	Added: Option to show affinity mask as bitmask or as decimal. Defaults to decimal. Bitmask is also no longer in reversed order.
	Changed: UI no longer shows "-- Any --" when nothing is configured and instead shows simply nothing.
	Added: Properties.Settings is now used for some configuration options, namely the new affinity mask option.
		This has some problems associated with it and may be transferred to the old .ini format.
### 2018-08-28
	Fixed: If no default microphone is set up, microphone manager won't crash the entire app.
	Added: Detect session end for clean shutdown.
### 2018-08-26
	Added: Total network device errors shown after deltas.
### 2018-07-20
	Fixed: An error retrieving process information when the process has already exited in foreground hang detector.
		Checked for other potential similar instances.
### 2018-07-17
	Fixed: An error retrieving process information when the process has already exited.
### 2018-07-08
	Added: Audio session management. `Watchlist.ini´ now has secret options `Volume´ and `Volume strategy´.
		Volume is floating point number from 0 to 1.
		Volume strategy ranges from 0 to 3. Meanings as follows: 0 = Ignore (default), 1 = Decrease, 2 = Increase, 3 = Either.
	Fixed: NullReferenceException that was introduced on same day update.

### 2018-07-03
	Fixed: Unhandled process exit is now handled.
### 2018-07-02
	Changed: Some debug output for monitor power states.
### 2018-06-30
	Fixed: Monitor sleep during lock is not giving up.

### 2018-06-29 Version 0.11
	Added: Option to minimize, reduce priority&affinity, and to kill hung foreground apps, based on time spent hung.

## [0.10...]
### 2018-06-28
	Fixed: Rare crash if OS task scheduler is not responding. Now wait longer, kill any lingering started processes, and be smarter.
### 2018-06-22
	Fixed: Monitor sleep during session lock does not work sometimes.
### 2018-06-15
	Fixed: Network status changes were not being informed as they should've been.
	Changed: Removed some pointless network device list updates and only marked the need for refreshing.
	Changed: Made some code paths exit early if they detect process they're dealing with having exited.
### 2018-06-08
	Fixed: Rare(?) crash if session lock monitor power down is enabled.
### 2018-06-03
	Fixed: Network tab does not update address when IP changes while the UI is open.
	Fixed: Network connected/disconnected log messages should no longer spam. This delays the messages for up to 15 seconds.
### 2018-06-01
	Fixed: Minor inconsequential crash during exit.
### 2018-05-26
	Changed: Less spammy logging when internet connection is disrupted.
### 2018-05-25
	Fixed: NullReferenceException at line 101
	Fixed: Default affinity strategy (limit) did not actually limit due to faults in bit flopping logics.
### 2018-05-23
	Added: Extra path cache/finding statistics on exit.
	Fixed: A fatal error related to failure to extract path from process module.
### 2018-05-21
	Changed: Dialog from component config now allows instant restarting of TM if so desired.
	Fixed: Problems with new unconfigured TM setups. (reported by Chairkicker Nick)
### 2018-05-20
	Added: ctrl-alt-shift-m global hotkey to free memory except from current foreground app. This is disabled by default and requires enabling via `Register global hotkeys` in Core.ini.
	Changed: A lot of internal scheduling was altered, hopefully to make TM more responsive.
	Fixed: Rolled back a change that provided extended version information due to it causing crashes on some systems. Cause is known, fix is not.  (reported by Chairkicker Nick)
### 2018-05-19
	Fixed: Watchlist rule edit window allowed entering garbage in affinity strategy.
	Changed: Saving a watchlist rule does not delete the old.
	Changed: Watchlist rules are no longer re-ordered when modified, as long as the friendly name remains unchanged. This is limitation of SharpConfig.
	Changed: Process affinity and priority adjusts now include a short text about failure to modify them.
	Added: `Persistent watchlist statistics` option in [Performance] section. Disabling it causes Watchlist.Statistics.ini no longer accessed.
	Changed: Some timestamp calculation changes, should have no end-user visible effects.
	Changed: Copy to clipboard for watchlist rules now includes ignore list, affinity strategy, recheck time, and correct executable name.
	Fixed: Cache eviction was apparently non-functional until a recent change. This change also revealed old debugging messages. These messages no longer show up under normal operation.
### 2018-05-18
	Changed: Refactored a lot of internal code, should have no impact for end-users.
	Fixed: Health monitor was not functional, now it is.
	Fixed: Paging had potential for leaking paging to where it wasn't supposed to happen. Still can, but it's lessened.
	Added: Affinity strategy can now be edited in the UI.
### 2018-05-17
	Added: Option to run with task scheduler on login instead of using the age old regrun method. Allows starting up automatically as admin.
	Fixed: Hopefully fixed some crashes related to WinForms? Maybe? Please?
### 2018-05-16
	Changed: `Increase` and `Decrease` options in `Watchlist.ini` are now `Priority strategy` with values from 0 to 3.
		0 = Ignore/Unset, 1 = Increase only, 2 = Decrease only, 3 = Force/bidirectional
		Upgrading to new settings should happen automatically for now.
	Added: Foreground app hang detector.
	Changed: Resize&reposition uses `Resize strategy` option instead of `Remember size` and `Remember position`.
		0 = None, 1 = Size, 2 = Position, 3 = Both
		Upgrading to new settings should happen automatically for now.
	Fixed: Resize & reposition settings should no longer reset to 0 under certain circumstances. (reported by Chairkicker Nick)
	Fixed: Uncaught error in app hang detector.
### 2018-05-15
	Fixed: Crash in watchlist rule editor if the affinity checkboxes were used.
	Changed: Internal restructuring, removed PostSharp usage due to its interfererence with build process. Should have no effect for end users.
### 2018-05-13
	Changed: Remember window sizes and positions works a little differently. (requested by Chairkicker Nick)
	Added: More debug output
	Changed: Affinity setting no longer increases the number of allowed cores. This may later become configurable to allow increasing them.
### 2018-05-12
	Changed: Explorer crash handling. Should be less convinced about explorer crashes when no such thing happened.
### 2018-05-11
	Changed: CPU sampling is simplified. May run better or worse.
	Changed: Debugging for health monitor low memory functionality.
	Changed: Health monitor memory option now respects the more general paging option.
### 2018-05-09
	Fixed: Network tab packet&error deltas were not functioning.
	Changed: Attempt to color errors in UI log.
### 2018-05-07
	Fixed: Apparently Task.Wait() hangs indefinitely under some obscure circumstances. Caused manual power mode to deadlock?
	Fixed: All CPUs mask was messed up.
	Changed: Power auto-adjust default configuration changed a tiny bit.
### 2018-05-06
	Fixed: Weirdness with full CPU mask affinity. -1 is now special value for ignore in UI instead of 0.
	Changed: Explorer crash handling. It's more informative which process crashed and should handle multiple explorer processes better.

### 2018-05-05 Version 0.10
	Changed: Allow watchlist rules with no affinity nor priority. (requested by Chairkicker Nick)
	Fixed: Empty network device list if it was last active tab.

## [0.9...]
### 2018-05-04
	Fixed: Validation does not find executables correctly.
	Changed: Some behind the scenes things to help catch an elusive problem with per-app power management.
	Fixed: Resize settings not changed when the rule was edited in UI.
### 2018-04-30
	Changed: Code cleanup.
### 2018-04-29
	Fixed: Clear UI log caused the log to not have anything after.
	Changed: Added a bit more logic to ensure tray becomes visible. May not actually help.
	Added: Option to ignore apps in %SYSTEMROOT%/System32. Enabled by default. Partial implementation.
	Removed: Support for case sensitive matching. Case will now always be ignored.
### 2018-04-28
	Added: Power down monitors when session is locked. Core.ini has two settings for this, one to control user idle timer and second for instant power down.
	Changed: Process adjusts are logged by default again.
	Added: Session lock actions are logged by default.
	Added: Configuration for the above added to Configuration>Logging and added two more debug options.
### 2018-04-25
	Added: [Debug] section in Core.ini with secret options to enable various debug functions at launch.
### 2018-04-24
	Fixed: Default power mode is not applied on start-up if auto-adjust is disabled. (reported by Chairkicker Nick)
	Removed: Experimental path location feature. Limited usability, documentation, and lack of desire to maintain it made it unwanted.
	Changed: You can now copy multiple lines from the log at the same time to clipboard.
### 2018-04-23
	Fixed: Error at HealthMonitor.cs:380 when foreground monitor was disabled. (reported by Chairkicker Nick)
	Changed: How empty watchlist is detected.
### 2018-04-22
	Fixed: Retarded WinForms bug.
### 2018-04-18
	Added: Health monitor now warns of low diskspace. Defaults to 150 MB.
	Added: Experimental feature to resize detected apps. Usable as `Resize={Top,Left,Width,Height}` in Watchlist.ini. (requested by Chairkicker Nick)
	Added: `Remember size=true/false` and `Remember position=true/false` in Watchlist.ini to control the `Resize` option.
	Fixed: Removing a rule did not do proper cleanup, causing rule with similar options to not work correctly without restart.
### 2018-04-17
	Added: Option to disable showing TM in taskbar. Found in Configuration > Behaviour in main window menubar.
### 2018-04-16
	Added: Core.ini option `Immediate configuration saving`, which instead of marking configs for saving on exit, immediately saves them. Disabled by default.
	Changed: Status bar now includes touch count since launch and uses proper labels instead of whatever garbage it was before.
	Fixed: Resizing from window borders now works for main window.
### 2018-04-15
	Added: Extra debug relating to restarting TM.
	Added: Change log started. Older entries are based on scarce notes.
	Fixed: Event log being resized to very small size would hide it behind the above tab element.
### 2018-04-13
	Fixed: Some foreground process debug output.
### 2018-04-12
	Fixed: Unspecified log output fixes.
### 2018-04-11
	Fixed: Main window resizing now works properly. Most noticeable with the event log.
### 2018-04-10
	Changed: Reduced non-debug output.

## 2018-04-09 First Itch.io release; Version 0.9
	Added: Itch.io link.
	Changed: Moving some output to debug.

## [0.8...]
### 2018-04-05
	Changed: Unspecified log output corrected.
### 2018-04-03
	Fixed: Processing count drift.
### 2018-04-01
	Fixed: Affinity not being set under certain conditions.
### 2018-04-01
	Added: Auto-exit function if fatal errors or log size exceed certain threshold.
### 2018-03-31
	Added: New --once option to process watchlist once and exit.
	Added: Save main window position.
	Changed: Buttons in main window were removed. Functionality still available in menus.
### 2018-03-30
	Fixed: Dialog positions sanitized, they should be more consistent now.
	Changed: Log verbosity option moved to debug menu.
### 2018-03-29
	Changed: Tabs for components are now hidden as are process and power debug tabs when said things are disabled. (requested by Chairkicker Nick)
	Fixed: Power mode was not reflected in UI.
	Added: `Background powerdown` option added to Watchlist.ini to disable power mode forcing when not in foreground.
### 2018-03-29
	Fixed: Power mode restroration is now more reliable. (reported by Chairkicker Nick)
